 @startuml

title Classes - Elevator Simulator

abstract class Staff
abstract class Security


Passenger <|-- People
Passenger <|-- Staff: Abstract Class
note on link #red: Abstract Class

Passenger <|-- Security  :Abstract Class
note on link #red: Abstract Class


People <|-- Visitors
People <|-- Patient

Staff <|-- SupportStaff
Staff <|-- MedicalStaff

Security <|-- SecurityPersonal

class Security{
virtual void evacuate();
}

class Staff{
virtual void emergency ()=0;
}

class Passenger{
+ string passengerID
+ int weight
+ int currentFloor
+ string getonTime
+ string getoffTime
+ requestFloor()
+ findwaitTime()
}

class Visitors{
    {static} int count;

    Visitors();
    virtual ~Visitors();
    virtual void introduce () override ;
}

class Patient{
    {static} int count;

    Patient();
    virtual ~Patient();
    virtual void introduce () override ;

}

class SupportStaff{

    {static} int count;
    SupportStaff();
    virtual ~SupportStaff();
    virtual void introduce () override ;
    virtual void emergency() override;
}
class MedicalStaff{

    {static} int count;
    MedicalStaff();
    virtual ~MedicalStaff();
    virtual void introduce () override ;
    virtual void emergency() override ;
}

class SecurityPersonal{
    {static} int count;
    SecurityPersonal();
    virtual ~SecurityPersonal();
    virtual void introduce () override ;
    virtual void evacuate() override ;
}

class SystemController{
+  string line;
+ string result;
+ int counter;
+ map<int, vector<std::string>> Data;

+ SystemController();
+ ~SystemController();
+ void readFile(std::string path);
}

class randomGenerator{

{static}int generateRandomNumber(int low, int high);

}



@enduml